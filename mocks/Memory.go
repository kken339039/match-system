// Code generated by mockery v2.35.4. DO NOT EDIT.

package mocks

import (
	model_interfaces "match-system/interfaces/models"

	mock "github.com/stretchr/testify/mock"
)

// Memory is an autogenerated mock type for the Memory type
type Memory struct {
	mock.Mock
}

// GetUsers provides a mock function with given fields:
func (_m *Memory) GetUsers() []model_interfaces.User {
	ret := _m.Called()

	var r0 []model_interfaces.User
	if rf, ok := ret.Get(0).(func() []model_interfaces.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model_interfaces.User)
		}
	}

	return r0
}

// SetUsers provides a mock function with given fields: _a0
func (_m *Memory) SetUsers(_a0 []model_interfaces.User) {
	_m.Called(_a0)
}

// NewMemory creates a new instance of Memory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMemory(t interface {
	mock.TestingT
	Cleanup(func())
}) *Memory {
	mock := &Memory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
